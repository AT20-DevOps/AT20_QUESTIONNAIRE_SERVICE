format_version: 10
pipelines:
  Config-ap:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    secure_variables:
      SONAR_TOKEN: AES:5vWMmQjrNzqUtmOM+x+deg==:2XH1ws/PIdchiO9mvHco5Qi2nr9TR0Ac82LsC32f21WmeIFDmO05INhbcLeSL9jI
      DOCKER_PASS: AES:pfSxOi3e/hottCY9PinHXg==:0gxybNbupNnQegSQseplWA==
    materials:
      git-9713ea4:
        git: https://github.com/AT20-DevOps/AT20_QUESTIONNAIRE_SERVICE.git
        username: Adalid-Perez
        shallow_clone: false
        auto_update: true
        branch: task-14_AP
        encrypted_password: AES:yv+jiQLZTyJ6AhZPplc+yQ==:YC20C5bVY0+kDA00tjIeDA==
    stages:
    - Test:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          unit-test:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                git rev-parse --short HEAD > gitHash.txt
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                npm install
                npm test
            artifacts:
            - test:
                source: tests/test-results/*.xml
                destination: xml_report
            - build:
                source: tests/test-results/
                destination: html_report
            - build:
                source: gitHash.txt
            - build:
                source: docker-compose-ap.yaml 
          code-coverage:
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -la
                command: ls
                run_if: passed
    - code-inspection:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          sonar:
            timeout: 0
            resources:
            - ubuntu
            tasks:
            - script: |
                /godata/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner  -Dsonar.organization=at-20-questionnaire-ap  -Dsonar.projectKey=Adalid_AT20_QUESTIONNAIRE_SERVICE  -Dsonar.sources=.  -Dsonar.host.url=https://sonarcloud.io
    - PackageAndPublish:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          docker:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                is_file: false
                source: ./
                stage: Test
                job: unit-test
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                docker build -t questionnaire-service .
                docker login -u adalid21 -p ${DOCKER_PASS}
                docker tag questionnaire-service adalid21/questionnaire-service:${GIT_COMMIT_HASH}
                docker push adalid21/questionnaire-service:${GIT_COMMIT_HASH}
            artifacts:
            - build:
                source: docker-compose-ap.yaml

  Acceptance:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
    materials:
      Config-ap:
        pipeline: Config-ap
        stage: PackageAndPublish
    stages:
    - DeployToDev:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          deployToDev:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                pipeline: Config-ap
                stage: Test
                job: unit-test
                source: gitHash.txt
                is_file: true
                run_if: passed
            - fetch:
                pipeline: Config-ap
                stage: PackageAndPublish
                job: docker
                source: docker-compose-ap.yaml
                is_file: true
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                export TAG_VERSION=${GIT_COMMIT_HASH} && docker-compose -f docker-compose-ap.yaml up -d 
    - Smoke:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          test:
            timeout: 0
            resources:
            - docker
            tasks:
            - script: |
                echo command to run smoke test
  Capacity_testing:
    group: AT20Group
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      GIT_COMMIT_HASH: 1.2
      TARGET_HOST: 192.168.0.108
    materials:
      Config-ap:
        pipeline: Config-ap
        stage: PackageAndPublish
    stages:
    - DeployToAuto:
        fetch_materials: false
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
          allow_only_on_success: false
        jobs:
          deployToAuto:
            timeout: 0
            resources:
            - docker
            tasks:
            - fetch:
                pipeline: Config-ap
                stage: Test
                job: unit-test
                source: gitHash.txt
                is_file: true
                run_if: passed
            - fetch:
                pipeline: Config-ap
                stage: PackageAndPublish
                job: docker
                source: docker-compose-ap.yaml
                is_file: true
                run_if: passed
            - script: |
                export GIT_COMMIT_HASH=$(cat gitHash.txt)
                export TAG_VERSION=${GIT_COMMIT_HASH} 
                DOCKER_HOST=ssh://$TARGET_HOST docker-compose -f docker-compose-ap.yaml up -d
