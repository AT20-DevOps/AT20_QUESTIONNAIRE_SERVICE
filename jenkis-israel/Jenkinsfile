pipeline {
    agent any
    environment{
        DOCKER_PASS = credentials('docker_password')
        SONAR_TOKEN = credentials('sonar_token')
        ORG_KEY = 'dkmar11'
        PROJECT_KEY = 'dkmar11_AT20_QUESTIONNAIRE_SERVICE'
    }
    stages{
        stage('test'){
            agent{docker 'node:18-alpine3.16'}
            steps{
                sh 'npm install'
                sh 'npm test'
            }
            post{
                always{
                    archiveArtifacts artifacts: 'tests/test-results/', followSymlinks: false
                }
            }
        }

        stage('CodeInspection'){
            steps {
                withSonarQubeEnv('sonar_scanner'){
                        sh '/var/jenkins_home/.sonar/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
                        -Dsonar.organization=${ORG_KEY} \
                        -Dsonar.projectKey=${PROJECT_KEY} \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=https://sonarcloud.io'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    script {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }

        stage('Package'){
            steps{
                sh 'echo docker build -t at20_questionnaire_service .'
            }
        }

        stage('Publish'){
            steps{
                sh 'echo docker login -u dkmar11 -p ${DOCKER_PASS}'
                sh 'echo docker tag at20_questionnaire_service dkmar11/questionnaire'
                sh 'echo docker push dkmar11/questionnaire'
            }
        }
    }
}